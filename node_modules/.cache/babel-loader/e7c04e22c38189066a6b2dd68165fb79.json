{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSaga = runSaga;\n\nvar _utils = require('./utils');\n\nvar _proc = require('./proc');\n\nvar _proc2 = _interopRequireDefault(_proc);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction runSaga(iterator, _ref) {\n  var subscribe = _ref.subscribe,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      sagaMonitor = _ref.sagaMonitor,\n      logger = _ref.logger,\n      onError = _ref.onError;\n  (0, _utils.check)(iterator, _utils.is.iterator, \"runSaga must be called on an iterator\");\n  var effectId = (0, _utils.uid)();\n\n  if (sagaMonitor) {\n    dispatch = (0, _utils.wrapSagaDispatch)(dispatch);\n    sagaMonitor.effectTriggered({\n      effectId: effectId,\n      root: true,\n      parentEffectId: 0,\n      effect: {\n        root: true,\n        saga: iterator,\n        args: []\n      }\n    });\n  }\n\n  var task = (0, _proc2.default)(iterator, subscribe, dispatch, getState, {\n    sagaMonitor: sagaMonitor,\n    logger: logger,\n    onError: onError\n  }, effectId, iterator.name);\n\n  if (sagaMonitor) {\n    sagaMonitor.effectResolved(effectId, task);\n  }\n\n  return task;\n}","map":{"version":3,"sources":["F:/Projects/shielder web/node_modules/redux-saga/lib/internal/runSaga.js"],"names":["Object","defineProperty","exports","value","runSaga","_utils","require","_proc","_proc2","_interopRequireDefault","obj","__esModule","default","iterator","_ref","subscribe","dispatch","getState","sagaMonitor","logger","onError","check","is","effectId","uid","wrapSagaDispatch","effectTriggered","root","parentEffectId","effect","saga","args","task","name","effectResolved"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIE,MAAM,GAAGC,sBAAsB,CAACF,KAAD,CAAnC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASN,OAAT,CAAiBS,QAAjB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAAA,MAGIC,WAAW,GAAGJ,IAAI,CAACI,WAHvB;AAAA,MAIIC,MAAM,GAAGL,IAAI,CAACK,MAJlB;AAAA,MAKIC,OAAO,GAAGN,IAAI,CAACM,OALnB;AAQA,GAAC,GAAGf,MAAM,CAACgB,KAAX,EAAkBR,QAAlB,EAA4BR,MAAM,CAACiB,EAAP,CAAUT,QAAtC,EAAgD,uCAAhD;AAEA,MAAIU,QAAQ,GAAG,CAAC,GAAGlB,MAAM,CAACmB,GAAX,GAAf;;AACA,MAAIN,WAAJ,EAAiB;AACfF,IAAAA,QAAQ,GAAG,CAAC,GAAGX,MAAM,CAACoB,gBAAX,EAA6BT,QAA7B,CAAX;AACAE,IAAAA,WAAW,CAACQ,eAAZ,CAA4B;AAAEH,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBI,MAAAA,IAAI,EAAE,IAA5B;AAAkCC,MAAAA,cAAc,EAAE,CAAlD;AAAqDC,MAAAA,MAAM,EAAE;AAAEF,QAAAA,IAAI,EAAE,IAAR;AAAcG,QAAAA,IAAI,EAAEjB,QAApB;AAA8BkB,QAAAA,IAAI,EAAE;AAApC;AAA7D,KAA5B;AACD;;AACD,MAAIC,IAAI,GAAG,CAAC,GAAGxB,MAAM,CAACI,OAAX,EAAoBC,QAApB,EAA8BE,SAA9B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6D;AAAEC,IAAAA,WAAW,EAAEA,WAAf;AAA4BC,IAAAA,MAAM,EAAEA,MAApC;AAA4CC,IAAAA,OAAO,EAAEA;AAArD,GAA7D,EAA6HG,QAA7H,EAAuIV,QAAQ,CAACoB,IAAhJ,CAAX;;AAEA,MAAIf,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACgB,cAAZ,CAA2BX,QAA3B,EAAqCS,IAArC;AACD;;AAED,SAAOA,IAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runSaga = runSaga;\n\nvar _utils = require('./utils');\n\nvar _proc = require('./proc');\n\nvar _proc2 = _interopRequireDefault(_proc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction runSaga(iterator, _ref) {\n  var subscribe = _ref.subscribe,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      sagaMonitor = _ref.sagaMonitor,\n      logger = _ref.logger,\n      onError = _ref.onError;\n\n\n  (0, _utils.check)(iterator, _utils.is.iterator, \"runSaga must be called on an iterator\");\n\n  var effectId = (0, _utils.uid)();\n  if (sagaMonitor) {\n    dispatch = (0, _utils.wrapSagaDispatch)(dispatch);\n    sagaMonitor.effectTriggered({ effectId: effectId, root: true, parentEffectId: 0, effect: { root: true, saga: iterator, args: [] } });\n  }\n  var task = (0, _proc2.default)(iterator, subscribe, dispatch, getState, { sagaMonitor: sagaMonitor, logger: logger, onError: onError }, effectId, iterator.name);\n\n  if (sagaMonitor) {\n    sagaMonitor.effectResolved(effectId, task);\n  }\n\n  return task;\n}"]},"metadata":{},"sourceType":"script"}